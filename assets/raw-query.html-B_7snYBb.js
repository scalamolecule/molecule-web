import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as e}from"./app-DA7sdl7T.js";const t={};function l(p,s){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="raw-query" tabindex="-1"><a class="header-anchor" href="#raw-query"><span>Raw Query</span></a></h1><p>Molecule queries are translated to raw query strings for each database.</p><h2 id="rawquery" tabindex="-1"><a class="header-anchor" href="#rawquery"><span><code>rawQuery</code></span></a></h2><p>If we want to access the database directly we can call <code>rawQuery</code> with a raw query String. We could for instance tweak a raw query from some inspection, here we simply use the above raw query as-is:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> rawResult</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Any</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">]] </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> rawQuery(</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  &quot;&quot;&quot;SELECT DISTINCT</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.name,</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.age</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |FROM Person</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |WHERE</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.name IS NOT NULL AND</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.age  IS NOT NULL;&quot;&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.stripMargin</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">rawResult ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">  List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Bob&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">  List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Liz&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">38</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>Notice the return type of <code>List[List[Any]]</code> from <code>rawQuery</code>. We then need to cast it ourselves if we want to use the raw result.</p><p>Set the second <code>debug</code> parameter of <code>rawQuery</code> to <code>true</code> to output debug information too:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">rawQuery(</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  &quot;&quot;&quot;SELECT DISTINCT</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.name,</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.age</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |FROM Person</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |WHERE</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.name IS NOT NULL AND</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  Person.age  IS NOT NULL;&quot;&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.stripMargin,</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">  true</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // print debug info</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>3 groups of information is then printed to the console:</p><ul><li>Raw query (as supplied)</li><li>The raw result, a <code>List[List[Any]]</code></li><li>Raw type information received from the database</li></ul><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>=============================================================================</span></span>
<span class="line"><span>SELECT DISTINCT</span></span>
<span class="line"><span>  Person.name,</span></span>
<span class="line"><span>  Person.age</span></span>
<span class="line"><span>FROM Person</span></span>
<span class="line"><span>WHERE</span></span>
<span class="line"><span>  Person.name IS NOT NULL AND</span></span>
<span class="line"><span>  Person.age  IS NOT NULL;</span></span>
<span class="line"><span>  </span></span>
<span class="line"><span>List(</span></span>
<span class="line"><span>  List(Bob, 42),</span></span>
<span class="line"><span>  List(Liz, 38)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Column    Raw type                   Db type</span></span>
<span class="line"><span>------------------------------------------------------</span></span>
<span class="line"><span>NAME      class java.lang.String     CHARACTER VARYING</span></span>
<span class="line"><span>AGE       class java.lang.Integer    INTEGER</span></span></code></pre></div><p>Currently, input parameters using <code>?</code> placeholders in the query is not supported by <code>rawQuery</code>. You would then need to use raw JDBC code.</p><p>See also <a href="/docs/transact/raw-transact">raw transact</a>.</p>`,13)]))}const k=a(t,[["render",l],["__file","raw-query.html.vue"]]),o=JSON.parse('{"path":"/database/query/raw-query.html","title":"Raw Query","lang":"en-US","frontmatter":{"description":"Raw Query Molecule queries are translated to raw query strings for each database. rawQuery If we want to access the database directly we can call rawQuery with a raw query Strin...","head":[["meta",{"property":"og:url","content":"https://www.scalamolecule.org/intro/database/query/raw-query.html"}],["meta",{"property":"og:site_name","content":"Molecule"}],["meta",{"property":"og:title","content":"Raw Query"}],["meta",{"property":"og:description","content":"Raw Query Molecule queries are translated to raw query strings for each database. rawQuery If we want to access the database directly we can call rawQuery with a raw query Strin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Raw Query\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"rawQuery","slug":"rawquery","link":"#rawquery","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"database/query/raw-query.md","autoDesc":true}');export{k as comp,o as data};
