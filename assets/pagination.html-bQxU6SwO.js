import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as h}from"./app-BihnMuaJ.js";const n={};function k(l,s){return h(),a("div",null,s[0]||(s[0]=[t(`<h1 id="pagination" tabindex="-1"><a class="header-anchor" href="#pagination"><span>Pagination</span></a></h1><p>Molecule offers both Offset pagination and Cursor pagination.</p><h2 id="offset" tabindex="-1"><a class="header-anchor" href="#offset"><span>Offset</span></a></h2><p>Offset pagination is easy to understand and use. But it comes with a performance penalty the bigger the offset is on big data sets since the whole data set is scanned each time. But for smaller data sets it works fine.</p><p>We&#39;ll use the following minimal example data set as a testing ground:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.query.get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>Let&#39;s first look att <code>limit</code> and <code>offset</code> separately:</p><h3 id="limit" tabindex="-1"><a class="header-anchor" href="#limit"><span>Limit</span></a></h3><p>Assuming that <code>rank</code> is sorted, we can return <code>n</code> rows with <code>limit(n)</code>:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>It&#39;s like <code>take(n)</code> on a <code>List</code>. But applying a negative number changes the semantics and returns <code>n</code> rows from the end instead:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="offset-1" tabindex="-1"><a class="header-anchor" href="#offset-1"><span>Offset</span></a></h3><p>When using an offset, the return type changes to include</p><ul><li>data,</li><li>total count of rows and</li><li>whether there are more rows to fetch</li></ul><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> normal</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)] </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">  Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.name.query.get</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> offset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">: (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[(</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)], </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Int</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Boolean</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">  Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.name.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span></code></pre></div><p>Again assuming that our numbers are in order, we can return rows starting from <code>n</code> with <code>offset(n)</code>:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Starting from beginning (all)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// all</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Starting from second row (0-based indexing)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Etc..</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>As with <code>limit</code> we can acquire an offset from the end with a negative <code>n</code>:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Before end (all)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Before last row</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Before second last row, etc.</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="paginate" tabindex="-1"><a class="header-anchor" href="#paginate"><span>Paginate</span></a></h3><p>Offset pagination uses <code>limit</code> and <code>offset</code> in tandem. Going forward we can get page 1 and 2 like this:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// First page - more pages after...</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Next page - is last page (no more afer)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p><code>offset</code> and <code>limit</code> can be added in any order</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>Going backwards from the end:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Last page - more pages before...</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Previous page -  is first page (no more before)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get ==&gt; (</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h4 id="reverse-trick" tabindex="-1"><a class="header-anchor" href="#reverse-trick"><span>Reverse trick</span></a></h4><p>Backwards offset pagination uses <code>offset = totalCount-limit</code> which on large data sets become inefficient. So instead of using the negative number (which is otherwise fine for small data sets), you can reverse the ordering, take the first <code>n</code> rows and then reverse the result:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Slower</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get._1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Faster</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.d1.query.limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).offset(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get._1.reverse ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h2 id="cursor" tabindex="-1"><a class="header-anchor" href="#cursor"><span>Cursor</span></a></h2><p>Molecule uses &quot;Cursor pagination&quot; as a broad term for fetching <code>n</code> rows or a &quot;page&quot; after/before the last shown row.</p><p>To identify where a next page should start from, Molecule needs a cursor String applied to <code>from(&lt;cursor&gt;)</code>. Initially for the first page we simply give <code>from</code> an empty String. A new cursor String is then returned that we can use to fetch the next page:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// First page</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page1, cursor1, hasMore1) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">hasMore1 ==&gt; </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // more pages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Next page using cursor1 from first page</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page2, cursor2, hasMore2) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(cursor1).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page2 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">hasMore2 ==&gt; </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // no more pages</span></span></code></pre></div><p>We can also go backwards from the last page by using a negative <code>limit</code> number:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Last page</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page1, cursor1, hasMore1) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">hasMore1 ==&gt; </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // more pages</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Previous page using cursor1 from last page</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page2, cursor2, hasMore2) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(cursor1).limit(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page2 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">hasMore2 ==&gt; </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // no more pages</span></span></code></pre></div><p>The cursor String returned contains various information encoded with Base64 that Molecule uses to identify the next page rows.</p><h3 id="primary-unique" tabindex="-1"><a class="header-anchor" href="#primary-unique"><span>Primary unique</span></a></h3><p>The examples above work well since we have a result set sorted by the attribute <code>rank</code> that has been defined in our Data Model to be <code>unique</code>:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> rank</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> oneInt.unique</span></span></code></pre></div><p>This guarantees that we can reliably filter out previously shown data for each next page - data onwards from the last shown row.</p><h4 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>Id</span></a></h4><p>The default auto-incremented <code>id</code> attribute that Molecule manages internally is a unique attribute too, that we can use to paginate rows in chronological order:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Ids automatically inserted</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.username.insert(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Blaze&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Venom&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Phoenix&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).transact</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Use ids for pagination</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page1, cursor1, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.id.a1.username.query.from(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Blaze&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Venom&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page2, _, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.id.a1.username.query.from(cursor1).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page2 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Phoenix&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h4 id="date" tabindex="-1"><a class="header-anchor" href="#date"><span>Date</span></a></h4><p>If you want to sort and paginate by a <code>java.util.Date</code> attribute you might in rare cases get inconsistent paging results if multiple rows have dates within the same millisecond (the smallest unit of <code>Date</code>). The <code>Date</code> type is an example of what is often referred to as having &quot;near-uniqueness&quot; which normally works fine unless you have massive numbers of transactions going on that would increase the chances of occasional millisecond &quot;collisions&quot;.</p><h4 id="deleted-rows" tabindex="-1"><a class="header-anchor" href="#deleted-rows"><span>Deleted rows</span></a></h4><p>What happens if rows are deleted before calling the next page?! Especially if the deleted rows are on the edge between this and the next page. Normally in most other systems, the guarantees of consistent pagination don&#39;t account for this situation and are therefore not supported.</p><p>Molecule on the other hand has some resilience built in that takes into account that one or a few rows can be deleted in between page calls and still deliver consistent results. Let&#39;s look at an examples of this:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> ids</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">        =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.insert(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).transact.ids</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (id2, id5) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (ids(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), ids(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// First page</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page1, cursor1, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Last row of previous page is deleted</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(id2).delete.transact</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Next page unaffected</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page2, cursor2, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(cursor1).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page2 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// First row of next page is deleted</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(id5).delete.transact</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Next page simply skips deleted row</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page3, _, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.rank.a1.query.from(cursor2).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page3 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// deleted 5 is skipped</span></span></code></pre></div><p>As you can see, even if rows are deleted before or after the page edge, consistent expected next pages are returned.</p><p>Molecule takes 3 rows on each side of the edge between pages into account for possible deletions. The same goes for updates which semantically is a deletion followed by an addition.</p><p>This is all something that you don&#39;t need to think about. Molecule transparently apply the most reliable strategy possible for each next page call.</p><h3 id="secondary-unique" tabindex="-1"><a class="header-anchor" href="#secondary-unique"><span>Secondary unique</span></a></h3><p>Sometimes we want to sort primarily by a non-unique attribute and secondly by a unique attribute. Molecule can&#39;t then guarantee the same degree of pagination consistency but will most often be able to deliver correct pages:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.category.rank.insert(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Arcade&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Arcade&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Action&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).transact</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page1, cursor1, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.category.a1.rank.a2.query.from(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page1 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Action&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// &quot;Action&quot; sorted first</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Arcade&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">val</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (page2, _, _) </span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> Gamer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.category.a1.rank.a2.query.from(cursor1).limit(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).get</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">page2 ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Arcade&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><h3 id="no-unique" tabindex="-1"><a class="header-anchor" href="#no-unique"><span>No unique</span></a></h3><p>If the query is not sorted by any unique attribute, Molecule will still try to return as correct page results as possible. It does this by encoding hashed concatenated row values in the cursor String to fall back to as new identifiers to locate next pages. It&#39;s maybe not terribly performant, but it allows for unrestrained pagination that we haven&#39;t seen other systems offer and that gives you freedom to model and paginate as you like.</p><h5 id="pagination-compliance-tests" tabindex="-1"><a class="header-anchor" href="#pagination-compliance-tests"><span><a href="https://github.com/scalamolecule/molecule/tree/main/db/compliance/shared/src/test/scala/molecule/db/compliance/test/pagination" target="_blank" rel="noopener noreferrer"><i class="fas fa-handshake" style="margin-right:4px;"></i> Pagination compliance tests</a></span></a></h5>`,59)]))}const p=i(n,[["render",k],["__file","pagination.html.vue"]]),r=JSON.parse('{"path":"/database/query/pagination.html","title":"Pagination","lang":"en-US","frontmatter":{"description":"Pagination Molecule offers both Offset pagination and Cursor pagination. Offset Offset pagination is easy to understand and use. But it comes with a performance penalty the bigg...","head":[["meta",{"property":"og:url","content":"https://www.scalamolecule.org/intro/database/query/pagination.html"}],["meta",{"property":"og:site_name","content":"Molecule"}],["meta",{"property":"og:title","content":"Pagination"}],["meta",{"property":"og:description","content":"Pagination Molecule offers both Offset pagination and Cursor pagination. Offset Offset pagination is easy to understand and use. But it comes with a performance penalty the bigg..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pagination\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Offset","slug":"offset","link":"#offset","children":[{"level":3,"title":"Limit","slug":"limit","link":"#limit","children":[]},{"level":3,"title":"Offset","slug":"offset-1","link":"#offset-1","children":[]},{"level":3,"title":"Paginate","slug":"paginate","link":"#paginate","children":[]}]},{"level":2,"title":"Cursor","slug":"cursor","link":"#cursor","children":[{"level":3,"title":"Primary unique","slug":"primary-unique","link":"#primary-unique","children":[]},{"level":3,"title":"Secondary unique","slug":"secondary-unique","link":"#secondary-unique","children":[]},{"level":3,"title":"No unique","slug":"no-unique","link":"#no-unique","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"database/query/pagination.md","autoDesc":true}');export{p as comp,r as data};
