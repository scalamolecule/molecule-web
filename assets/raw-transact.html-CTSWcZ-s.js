import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as i,o as e}from"./app-CvitokP9.js";const t={};function l(p,a){return e(),n("div",null,a[0]||(a[0]=[i(`<h1 id="raw-transact" tabindex="-1"><a class="header-anchor" href="#raw-transact"><span>Raw Transact</span></a></h1><p>Molecule transactions are translated to prepared statements for SQL databases (with input placeholders).</p><h2 id="inspect" tabindex="-1"><a class="header-anchor" href="#inspect"><span><code>inspect</code></span></a></h2><p>Inspect a query molecule without returning data by adding <code>inspect</code> after <code>&lt;action&gt;</code>:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.name(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Bob&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).age(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  .</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Home</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.street(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Main st. 1&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  .save.inspect </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// (returns Unit)</span></span></code></pre></div><p>This will print the MetaModel of the molecule and for SQL, the produced prepared statements for each table:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span>========================================</span></span>
<span class="line"><span>SAVE:</span></span>
<span class="line"><span>AttrOneManString(&quot;Person&quot;, &quot;name&quot;, Eq, Seq(&quot;Bob&quot;), None, None, Nil, Nil, None, None, Seq(0, 1))</span></span>
<span class="line"><span>AttrOneManInt(&quot;Person&quot;, &quot;age&quot;, Eq, Seq(42), None, None, Nil, Nil, None, None, Seq(0, 4))</span></span>
<span class="line"><span>Ref(&quot;Person&quot;, &quot;home&quot;, &quot;Address&quot;, CardOne, false, Seq(0, 6, 1))</span></span>
<span class="line"><span>AttrOneManString(&quot;Address&quot;, &quot;street&quot;, Eq, Seq(&quot;Main st. 1&quot;), None, None, Nil, Nil, None, None, Seq(1, 12))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Save(</span></span>
<span class="line"><span>  Ns(</span></span>
<span class="line"><span>    RefOne(</span></span>
<span class="line"><span>      INSERT INTO Address (</span></span>
<span class="line"><span>        street</span></span>
<span class="line"><span>      ) VALUES (?)</span></span>
<span class="line"><span>    )</span></span>
<span class="line"><span>    ---------------------------</span></span>
<span class="line"><span>    INSERT INTO Person (</span></span>
<span class="line"><span>      name,</span></span>
<span class="line"><span>      age,</span></span>
<span class="line"><span>      home</span></span>
<span class="line"><span>    ) VALUES (?, ?, ?)</span></span>
<span class="line"><span>  )</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>----------------------------------------</span></span></code></pre></div><h2 id="i" tabindex="-1"><a class="header-anchor" href="#i"><span><code>i</code></span></a></h2><p>When working on molecules we might want to do a quick check of the prepared statements produced without having to change our code. Then we can simply add <code>i</code> (for &quot;inspect&quot;) to <code>transact</code> and apart from transacting the data also print the same info as shown above.</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.name(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Bob&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">).age(</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  .</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Home</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.street(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Main st. 1&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  .save.i.transact </span><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// adding \`i\` to also inspect</span></span></code></pre></div><h2 id="rawtransact" tabindex="-1"><a class="header-anchor" href="#rawtransact"><span><code>rawTransact</code></span></a></h2><p>For SQL databases we could insert raw data with an insert:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">rawTransact(</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">  &quot;&quot;&quot;INSERT INTO Person (</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  name,</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |  age</span></span>
<span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">    |) VALUES (&#39;Bob&#39;, 42)&quot;&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.stripMargin</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>We can confirm if the data has been inserted:</p><div class="language-scala" data-highlighter="shiki" data-ext="scala" data-title="scala" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">Person</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.name.age.query.get ==&gt; </span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;Bob&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">42</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span></code></pre></div><p>Likewise, we could update or delete raw data using raw transaction strings for the selected database.</p><p>See also <a href="/docs/query/raw-query">raw query</a>.</p><h5 id="raw-transaction-compliance-tests" tabindex="-1"><a class="header-anchor" href="#raw-transaction-compliance-tests"><span><a href="https://github.com/scalamolecule/molecule/tree/main/db/compliance/shared/src/test/scala/molecule/db/compliance/test/validation" target="_blank" rel="noopener noreferrer"><i class="fas fa-handshake" style="margin-right:4px;"></i> Raw transaction compliance tests</a></span></a></h5>`,18)]))}const o=s(t,[["render",l],["__file","raw-transact.html.vue"]]),c=JSON.parse('{"path":"/database/transact/raw-transact.html","title":"Raw Transact","lang":"en-US","frontmatter":{"next":"/docs/query/attributes","description":"Raw Transact Molecule transactions are translated to prepared statements for SQL databases (with input placeholders). inspect Inspect a query molecule without returning data by ...","head":[["meta",{"property":"og:url","content":"https://www.scalamolecule.org/intro/database/transact/raw-transact.html"}],["meta",{"property":"og:site_name","content":"Molecule"}],["meta",{"property":"og:title","content":"Raw Transact"}],["meta",{"property":"og:description","content":"Raw Transact Molecule transactions are translated to prepared statements for SQL databases (with input placeholders). inspect Inspect a query molecule without returning data by ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Raw Transact\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"inspect","slug":"inspect","link":"#inspect","children":[]},{"level":2,"title":"i","slug":"i","link":"#i","children":[]},{"level":2,"title":"rawTransact","slug":"rawtransact","link":"#rawtransact","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"filePathRelative":"database/transact/raw-transact.md","autoDesc":true}');export{o as comp,c as data};
